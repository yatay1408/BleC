name: Build Xamarin Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Install Visual Studio 2022 with .NET MAUI
      run: |
        choco install visualstudio2022community --package-parameters "--add Microsoft.VisualStudio.Workload.NetCoreBuildTools --includeRecommended --includeOptional"
        choco install visualstudio2022-workload-netmaui --package-parameters "--includeRecommended --includeOptional"
        choco install openjdk11
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        refreshenv

    - name: Set up Java SDK 11
      run: |
        $javaHome = "C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.23.9-hotspot"
        echo "JAVA_HOME=$javaHome" >> $Env:GITHUB_ENV
        echo "PATH=$javaHome\\bin;$Env:PATH" >> $Env:GITHUB_ENV

    - name: Install Android SDK
      run: |
        choco install android-sdk
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        refreshenv

    - name: Verify Java SDK Installation
      run: |
        java -version
        echo $Env:JAVA_HOME

    - name: Build Xamarin Android APK
      shell: pwsh
      run: |
        $vsPath = & "C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
        $msbuildPath = "$vsPath\\MSBuild\\Current\\Bin\\MSBuild.exe"
        & $msbuildPath Ble.Client/Ble.Client.sln /t:Restore /p:Configuration=Release
        & $msbuildPath Ble.Client/Ble.Client.Android/Ble.Client.Android.csproj /t:PackageForAndroid /p:Configuration=Release /p:JavaSdkDirectory="C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.23.9-hotspot"

    - name: Generate Keystore
      run: |
        $keystoreFile = "my-release-key.keystore"
        $keystorePassword = "password"
        $keyAlias = "my-key-alias"
        $keyPassword = "password"
        & "C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.23.9-hotspot\\bin\\keytool.exe" -genkeypair -v -keystore $keystoreFile -storepass $keystorePassword -keypass $keyPassword -alias $keyAlias -dname "CN=Example, OU=Example, O=Example, L=City, ST=State, C=US" -keyalg RSA -keysize 2048 -validity 10000

    - name: Find zipalign
      id: find-zipalign
      run: |
        $zipalignPath = (Get-ChildItem -Recurse "C:\\Android\\android-sdk\\build-tools" -Filter "zipalign.exe" | Select-Object -First 1).FullName
        if ($zipalignPath) {
          echo "zipalign=$zipalignPath" >> $Env:GITHUB_ENV
        } else {
          Write-Error "zipalign not found"
        }

    - name: Sign and Align APK
      run: |
        $apkPath = (Get-ChildItem -Path Ble.Client/Ble.Client.Android/bin/Release -Filter *.apk -Recurse).FullName
        & "C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.23.9-hotspot\\bin\\jarsigner.exe" -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore my-release-key.keystore -storepass password -keypass password $apkPath my-key-alias
        $alignedApkPath = "$($apkPath -replace '.apk$', '-aligned.apk')"
        & $Env:zipalign -v 4 $apkPath $alignedApkPath
        Move-Item -Path $alignedApkPath -Destination $apkPath -Force

    - name: Verify APK Signature
      run: |
        $apkPath = (Get-ChildItem -Path Ble.Client/Ble.Client.Android/bin/Release -Filter *.apk -Recurse).FullName
        & "C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.23.9-hotspot\\bin\\apksigner.bat" verify --verbose $apkPath

    - name: Verify APK Alignment
      run: |
        $apkPath = (Get-ChildItem -Path Ble.Client/Ble.Client.Android/bin/Release -Filter *.apk -Recurse).FullName
        & $Env:zipalign -c -v 4 $apkPath

    - name: Publish APK
      uses: actions/upload-artifact@v4
      with:
        name: XamarinAndroidApp
        path: '**/*.apk'
